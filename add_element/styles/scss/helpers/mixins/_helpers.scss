@mixin font-face-wc($font-family, $file-path, $weight: normal, $style: normal,$i:null) {
  @font-face {
    font-family: $font-family $i;
    font-weight: $weight $i;
    font-style: $style $i;
    src: url('#{$file-path}.woff') format('woff'),
      url('#{$file-path}.ttf') format('truetype');
  }
}
@mixin border-radius-wc($r: 50%,$i:null) {
  -webkit-border-radius: $r $i;
  -moz-border-radius: $r $i;
  border-radius: $r $i;
}
@mixin transition-wc($property: all, $duration: 0.3s, $function: ease-in-out,$i:null) {
  -webkit-transition: $property $duration $function $i;
  -moz-transition: $property $duration $function $i;
  -o-transition: $property $duration $function $i;
  transition: $property $duration $function $i;
}
@mixin transform-wc($value,$i:null) {
  -webkit-transform:$value $i;
  -moz-transform:   $value $i;
  -ms-transform:    $value $i;
  -o-transform:     $value $i;
  transform:        $value $i;
}
@mixin button-variant-wc(
  $background,
  $border,
  $color: $white,
  $font-weight: 600,
  $hover-background: if($color == $color-contrast-light, darken($background, 7.5%), lighten($background, 7.5%)),
  $hover-border: if($color == $color-contrast-light, darken($border, 10%), lighten($border, 5%)),
  $hover-color: $white,
  $active-background: if($color == $color-contrast-light, darken($background, 10%), lighten($background, 10%)),
  $active-border: if($color == $color-contrast-light, darken($border, 12.5%), lighten($border, 5%)),
  $active-color: $white,
  $disabled-background: $background,
  $disabled-border: $border,
  $disabled-color: $white
) {
  color: $color;
  @include gradient-bg($background);
  border-color: $border;
  @include box-shadow($btn-box-shadow);
  font-weight: $font-weight;

  &:hover {
    color: $hover-color;
    @include gradient-bg($hover-background);
    border-color: $hover-border;
  }

  .btn-check:focus + &,
  &:focus {
    color: $hover-color;
    @include gradient-bg($hover-background);
    border-color: $hover-border;
    @if $enable-shadows {
      @include box-shadow($btn-box-shadow, 0 0 0 $btn-focus-width rgba(mix($color, $border, 15%), .5));
    } @else {
      // Avoid using mixin so we can pass custom focus shadow properly
      box-shadow: 0 0 0 $btn-focus-width rgba(mix($color, $border, 15%), .5);
    }
  }

  .btn-check:checked + &,
  .btn-check:active + &,
  &:active,
  &.active,
  .show > &.dropdown-toggle {
    color: $active-color;
    background-color: $active-background;
    // Remove CSS gradients if they're enabled
    background-image: if($enable-gradients, none, null);
    border-color: $active-border;

    &:focus {
      @if $enable-shadows {
        @include box-shadow($btn-active-box-shadow, 0 0 0 $btn-focus-width rgba(mix($color, $border, 15%), .5));
      } @else {
        // Avoid using mixin so we can pass custom focus shadow properly
        box-shadow: 0 0 0 $btn-focus-width rgba(mix($color, $border, 15%), .5);
      }
    }
  }

  &:disabled,
  &.disabled {
    color: $disabled-color;
    background-color: $disabled-background;
    // Remove CSS gradients if they're enabled
    background-image: if($enable-gradients, none, null);
    border-color: $disabled-border;
  }
}

@mixin button-outline-variant-wc(
  $color,
  $color-border: $gray-500,
  $color-hover: color-contrast($color),
  $font-weight: 600,
  $active-background: $color,
  $active-border: $color,
  $active-color: color-contrast($active-background)
) {
  color: $color;
  border-color: $color-border;
  font-weight: $font-weight;

  &:hover {
    color: $color-hover;
    background-color: $active-background;
    border-color: $active-border;
  }

  .btn-check:focus + &,
  &:focus {
    box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
  }

  .btn-check:checked + &,
  .btn-check:active + &,
  &:active,
  &.active,
  &.dropdown-toggle.show {
    color: $active-color;
    background-color: $active-background;
    border-color: $active-border;

    &:focus {
      @if $enable-shadows {
        @include box-shadow($btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($color, .5));
      } @else {
        // Avoid using mixin so we can pass custom focus shadow properly
        box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
      }
    }
  }

  &:disabled,
  &.disabled {
    color: $color;
    background-color: transparent;
  }
}
//--media query--//
@mixin img-retina($file-1x:"/img/bg-1x.png",$file-2x:"/img/bg-2x.png",$file-3x:"/img/bg-3x.png",$width-1x:100px,$height-1x:100px,$width-2x:$width-1x,$height-2x:$height-1x,$width-3x:$width-2x,$height-3x:$height-2x) {
  background-image: url($file-1x);
  background-size: $width-1x $height-1x;
  background-repeat:no-repeat;
  width:$width-1x;
  height:$height-1x;

  @media
  only screen and (-webkit-min-device-pixel-ratio: 2),
  only screen and (   min--moz-device-pixel-ratio: 2),
  only screen and (     -o-min-device-pixel-ratio: 2/1),
  only screen and (        min-device-pixel-ratio: 2),
  only screen and (                min-resolution: 192dpi),
  only screen and (                min-resolution: 2dppx) {
    background-image: url($file-2x);
    background-size: $width-2x $height-2x;
    width:$width-2x;
    height:$height-2x;
  }
  @media
  only screen and (-webkit-min-device-pixel-ratio: 3),
  only screen and (   min--moz-device-pixel-ratio: 3),
  only screen and (     -o-min-device-pixel-ratio: 3/1),
  only screen and (        min-device-pixel-ratio: 3),
  only screen and (                min-resolution: 288dpi),
  only screen and (                min-resolution: 3dppx) {
    background-image: url($file-3x);
    background-size: $width-3x $height-3x;
    width:$width-3x;
    height:$height-3x;
  }
}